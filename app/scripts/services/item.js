// Generated by CoffeeScript 1.6.3
(function() {
  var onError, service;

  onError = function(error) {
    return console.log(error);
  };

  service = (function() {
    function service() {
      this.instance = Parse.Object.extend("Item");
    }

    service.prototype.list = function(end, start, cb) {
      var query;
      if (end == null) {
        end = new Date();
      }
      if (start == null) {
        start = new Date(0);
      }
      query = new Parse.Query(this.instance);
      query.lessThan('createdAt', new Date(end));
      query.greaterThan('createdAt', new Date(start));
      query.descending('createdAt');
      return query.find({
        success: cb,
        error: onError
      });
    };

    service.prototype.remove = function(model, cb) {
      return model.destroy({
        success: cb,
        error: onError
      });
    };

    service.prototype.add = function(cb, data) {
      var entity, k, v;
      if (data == null) {
        data = {};
      }
      entity = new this.Pomodoro();
      for (k in data) {
        v = data[k];
        entity.set(k, v);
      }
      entity.setACL(new Parse.ACL(Parse.User.current()));
      return entity.save({
        success: cb,
        error: onError
      });
    };

    service.prototype.update = function(model, cb) {
      return model.save({
        success: cb,
        error: onError
      });
    };

    return service;

  })();

  angular.module('manageApp').service('Item', service);

}).call(this);

/*
//@ sourceMappingURL=item.map
*/
